{
    "name": "C++ Testing Environment with Google Test",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "ms-vscode.makefile-tools",
                "google.googletest",
                "ms-vscode.test-adapter-converter",
                "hbenl.vscode-test-explorer",
                "ms-vscode.hexeditor",
                "ms-vscode.vscode-json"
            ],
            "settings": {
                "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
                "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
                "C_Cpp.default.compilerPath": "/usr/bin/g++",
                "C_Cpp.default.cStandard": "c17",
                "C_Cpp.default.cppStandard": "c++17",
                "cmake.buildDirectory": "${workspaceFolder}/build",
                "cmake.configureOnOpen": true,
                "cmake.generator": "Unix Makefiles",
                "files.associations": {
                    "*.h": "cpp",
                    "*.hpp": "cpp",
                    "*.cpp": "cpp",
                    "*.cc": "cpp",
                    "*.cxx": "cpp"
                },
                "terminal.integrated.defaultProfile.linux": "bash",
                "googletest.discoverTestsOnSave": true,
                "googletest.testExecutable": "${workspaceFolder}/build/test_checkstring"
            }
        }
    },
    "forwardPorts": [],
    "portsAttributes": {},
    "postCreateCommand": "mkdir -p build && cd build && cmake .. && make",
    "remoteUser": "vscode",
    "workspaceFolder": "/workspace",
    "mounts": [
        "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
    ],
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined"
    ],
    "containerEnv": {
        "CC": "gcc",
        "CXX": "g++"
    }
}
